{"version":3,"sources":["../../src/neural2.js"],"names":[],"mappings":";;;MAGY,O;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIZ,UAAQ,GAAR,CAAY,CACV,QAAQ,SAAR,CAAkB,aAAlB,CADU,EAEV,QAAQ,SAAR,CAAkB,eAAlB,CAFU,EAGV,QAAQ,SAAR,CAAkB,mBAAlB,CAHU,CAAZ,EAIG,IAJH,CAIQ,YAAW;;AAEjB,QAAI,WAAW,QAAQ,OAAR,CAAgB,eAAhB,CAAf;AACA,QAAI,OAAO,QAAQ,OAAR,CAAgB,aAAhB,CAAX;AACA,QAAI,eAAe,QAAQ,OAAR,CAAgB,mBAAhB,CAAnB;;AAEA,QAAI,cAAc,gCAAsB,SAAtB,EAAiC,IAAjC,EAAuC,QAAvC,CAAlB;;AAEA,QAAI,SAAS,SAAS,cAAT,CAAwB,QAAxB,CAAb;;AAEA,gBAAY,QAAZ,CAAqB,aAAa,GAAlC;AACA,gBAAY,IAAZ,CAAiB,MAAjB;;;;;;AAOD,GAtBD","file":"neural2.js","sourcesContent":["\nimport './src/ImageLoader_Overwrite.js'\n\nimport * as Loaders from './src/Loaders.js';\n\nimport NeuralComputation from './src/NeuralComputation.js';\n\nPromise.all([\n  Loaders.CacheJSON('events.json'),\n  Loaders.CacheJSON('sections.json'),\n  Loaders.CacheJSON('bigNeuralNet.json')\n]).then(function() {\n\n  var sections = Loaders.getJSON('sections.json');\n  var data = Loaders.getJSON('events.json');\n  var bigNeuralNet = Loaders.getJSON('bigNeuralNet.json');\n\n  var computation = new NeuralComputation(convnetjs, data, sections);\n\n  var canvas = document.getElementById(\"neural\");\n\n  computation.loadJson(bigNeuralNet.out);\n  computation.draw(canvas);\n\n  // setInterval(function() {\n  //   computation.train();\n  //   computation.draw(canvas);\n  // }, 10);\n\n});\n"]}