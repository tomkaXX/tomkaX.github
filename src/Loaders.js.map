{"version":3,"sources":["../../src/Loaders.js"],"names":[],"mappings":";;;;;;UA2BgB,Y,GAAA,Y;UAuBA,O,GAAA,O;UAaA,S,GAAA,S;UAyBA,O,GAAA,O;;AAvFhB,MAAI,WAAW,EAAf;;AAEA,MAAI,gBAAgB,IAAI,MAAM,aAAV,EAApB;;AAEA,MAAI,WAAW,CAAf;AACA,MAAI,OAAO,CAAX;;AAEA,WAAS,QAAT,GAAoB;AAClB,gBAAY,CAAZ;;AAEA,QAAI,cAAc,SAAS,cAAT,CAAwB,SAAxB,EAAmC,sBAAnC,CAA0D,UAA1D,EAAsE,CAAtE,EAAyE,sBAAzE,CAAgG,cAAhG,EAAgH,CAAhH,CAAlB;AACA,gBAAY,KAAZ,CAAkB,KAAlB,GAA2B,WAAW,IAAX,GAAkB,GAAnB,GAA0B,GAApD;;;;;;;;AAQA,YAAQ,GAAR,CAAY,UAAZ;;AAEA,QAAI,YAAY,IAAhB,EAAsB;AACpB,QAAE,UAAF,EAAc,QAAd,CAAuB,MAAvB;AACD;AACF;;AAEM,WAAS,YAAT,CAAuB,GAAvB,EAA4B;;AAEjC,YAAQ,CAAR;;AAEA,WAAO,IAAI,OAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,oBAAc,IAAd,CACE,GADF,EAEE,UAAW,OAAX,EAAqB;AACnB;AACA,iBAAS,GAAT,IAAgB,OAAhB;AACA,gBAAQ,OAAR;AACD,OANH,EAOE,UAAW,GAAX,EAAiB;;AAEhB,OATH,EAUE,UAAW,GAAX,EAAiB;AACf;AACA,eAAO,uBAAuB,GAA9B;AACD,OAbH;AAeD,KAhBM,CAAP;AAiBD;;AAEM,WAAS,OAAT,CAAkB,GAAlB,EAAuB;AAC5B,QAAI,CAAC,SAAS,GAAT,CAAL,EAAoB;AAClB,YAAM,2BAA2B,GAAjC;AACD;AACD,WAAO,SAAS,GAAT,CAAP;AACD;;AAED,MAAI,QAAQ,EAAZ;;AAEA,MAAI,aAAa,IAAI,MAAM,UAAV,EAAjB;;;;AAIO,WAAS,SAAT,CAAmB,GAAnB,EAAwB;;AAE7B,YAAQ,CAAR;;AAEA,WAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AAC3C,UAAI,MAAM,IAAI,cAAJ,EAAV;AACA,UAAI,IAAJ,CAAS,KAAT,EAAgB,GAAhB;AACA,UAAI,IAAJ,CAAS,IAAT;AACA,UAAI,kBAAJ,GAAyB,YAAY;AACnC,YAAI,IAAI,UAAJ,KAAmB,CAAvB,EAA0B;AACxB,cAAI,IAAI,MAAJ,KAAe,GAAnB,EAAwB;AACtB,gBAAI,OAAO,KAAK,KAAL,CAAW,IAAI,YAAf,CAAX;;AAEA,kBAAM,GAAN,IAAa,IAAb;AACA;AACA,oBAAQ,IAAR;AACD,WAND,MAMO;AACL;AACA,mBAAO,YAAY,IAAI,MAAvB;AACD;AACF;AACF,OAbD;AAcD,KAlBM,CAAP;AAmBD;;AAEM,WAAS,OAAT,CAAkB,GAAlB,EAAuB;AAC5B,WAAO,MAAM,GAAN,CAAP;AACD","file":"Loaders.js","sourcesContent":["\nvar textures = {};\n\nvar textureLoader = new THREE.TextureLoader();\n\nvar progress = 0;\nvar full = 0;\n\nfunction markDone() {\n  progress += 1;\n\n  var progressEle = document.getElementById(\"loading\").getElementsByClassName(\"progress\")[0].getElementsByClassName(\"progress-bar\")[0];\n  progressEle.style.width = (progress / full * 100) + \"%\";\n\n  // var progress = $('#loading .progress').first()[0]\n  // progress.style.width = (progress / full) + \"%\";\n\n  // console.log(progress);\n  // console.log(progress.style.width);\n\n  console.log(\"markDone\");\n\n  if (progress == full) {\n    $('#loading').addClass('done');\n  }\n}\n\nexport function CacheTexture (url) {\n\n  full += 1;\n\n  return new Promise ((resolve, reject) => {\n    textureLoader.load(\n      url,\n      function ( texture ) {\n        markDone();\n        textures[url] = texture;\n        resolve(texture);\n      },\n      function ( xhr ) {\n        // console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );\n      },\n      function ( xhr ) {\n        markDone();\n        reject(\"Error downloading \" + url);\n      }\n    );\n  });\n}\n\nexport function Texture (url) {\n  if (!textures[url]) {\n    throw \"Couldn't find texture \" + url;\n  }\n  return textures[url];\n}\n\nvar jsons = {};\n\nvar jsonLoader = new THREE.JSONLoader();\n// var _JSON = JSON;\n// console.log(_JSON);\n\nexport function CacheJSON(url) {\n\n  full += 1;\n\n  return new Promise(function(resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.send(null);\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          var json = JSON.parse(xhr.responseText);\n\n          jsons[url] = json;\n          markDone();\n          resolve(json);\n        } else {\n          markDone();\n          reject('Error: ' + xhr.status);\n        }\n      }\n    }\n  });\n};\n\nexport function getJSON (url) {\n  return jsons[url];\n}\n"]}